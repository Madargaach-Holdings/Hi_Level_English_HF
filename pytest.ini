[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10

# Minimum version requirement
minversion = 6.0

# Test markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    security: marks tests as security-related
    performance: marks tests as performance benchmarks
    api: marks tests that require API access
    local: marks tests for local model functionality
    gradio: marks tests for Gradio interface components
    workflow: marks tests for GitHub Actions workflows

# Test timeout (in seconds)
timeout = 300

# Ignore certain warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage settings (when using pytest-cov)
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */.venv/*
    */env/*
    */.env/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report settings
[coverage:html]
directory = htmlcov

# XML coverage report settings  
[coverage:xml]
output = coverage.xml